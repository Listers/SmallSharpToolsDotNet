//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmallSharpTools.Services.ServicesManagerClient
{
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://schemas.datacontract.org/2004/07/SmallSharpTools.Services.Manager")]
    [System.SerializableAttribute()]
    public partial class HostedService : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsManagerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive
        {
            get
            {
                return this.IsActiveField;
            }
            set
            {
                this.IsActiveField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsManager
        {
            get
            {
                return this.IsManagerField;
            }
            set
            {
                this.IsManagerField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SmallSharpTools.Services.ServicesManagerClient.IServicesManager")]
    public interface IServicesManager
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicesManager/GetHostedServices", ReplyAction="http://tempuri.org/IServicesManager/GetHostedServicesResponse")]
        SmallSharpTools.Services.ServicesManagerClient.HostedService[] GetHostedServices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicesManager/StartService", ReplyAction="http://tempuri.org/IServicesManager/StartServiceResponse")]
        void StartService(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicesManager/StopService", ReplyAction="http://tempuri.org/IServicesManager/StopServiceResponse")]
        void StopService(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IServicesManagerChannel : SmallSharpTools.Services.ServicesManagerClient.IServicesManager, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class ServicesManagerClient : System.ServiceModel.ClientBase<SmallSharpTools.Services.ServicesManagerClient.IServicesManager>, SmallSharpTools.Services.ServicesManagerClient.IServicesManager
    {
        
        public ServicesManagerClient()
        {
        }
        
        public ServicesManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public ServicesManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ServicesManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ServicesManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public SmallSharpTools.Services.ServicesManagerClient.HostedService[] GetHostedServices()
        {
            return base.Channel.GetHostedServices();
        }
        
        public void StartService(string name)
        {
            base.Channel.StartService(name);
        }
        
        public void StopService(string name)
        {
            base.Channel.StopService(name);
        }
    }
}
